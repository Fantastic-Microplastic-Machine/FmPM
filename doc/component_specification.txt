Component specification

Prep:
----------------
Name: set_seeds
What is does: Set various random states
Inputs: an integer
Outputs: none

Name: encode_column
What it does: One hot encodes a pandas dataframe column
Inputs: Single column pandas dataframe
Outputs: One hot encoded version of input column

Name: add_filenames
What it does: Searchs through an directory for files based on keywords in 'Sample' column and puts filenames into new column 'File'
Inputs: Pandas dataframe with column named 'Sample'
Outputs: Pandas dataframe

Name: split_sample
What it does: Splits 'Sample' column of dataframe into list of keywords
Inputs: Pandas dataframe with column named 'Sample'
Outputs: Pandas dataframe

Name: convert_plastics
What it does: Converts 'Identification' column into column of 0/1's 0 meaning not a plastic
Inputs: Pandas dataframe with column named 'Identification'
Outputs: Pandas dataframe

Name: split_description
What it does: Splits 'Description' column of dataframe into two columns, 'Color' and 'Shape' on first space
Inputs: Pandas dataframe with column named 'Description'
Outputs: Pandas dataframe

Name: prep_data
What it does: Calls all other functions in prep
Inputs: Pandas dataframe
Outputs: Pandas dataframe

Name: tenX_dataset
What it does: Pytorch dataset class. Allows use of pytorch dataloader.
Inputs: Pandas dataframe, image directory name, and a pytorch transform composition
Outputs: instance of tenX_dataset class


Construct:
----------------
Name: calculate_accuracy
What it does: Calculates accuracy of binary classification
Inputs: Two tensors
Outputs: Integer

Name: train_iteration
What it does: Runs one epoch of training
Inputs: a model, a dataloader, a optimizer, a loss function, and a device
Outputs: The epoch average accuracy and average loss

Name: train
What it does: Trains a model
Inputs: number of epochs (int), batch size (int), dataset class instance, a loss function, a optimizer, a model, and a device
Outputs: The trained model, the average loss and accuracy for each epoch (floats)

Name: get_predictions
What it does: Makes predictions using a trained model
Inputs: batch size (int), a model, a dataset class instance, and a device
Outputs: The images in the dataset (tensor), the labels in the dataset (tensor), predictions (tensor), output of model (tensor), and the accuracy (float).

Name: save_model
What it does: Saves a model into the file system
Inputs: a model, and a filepath (string)
Outputs: None

Name: load_model
What it does:
Inputs: a filepath (string)
Outputs: a model
